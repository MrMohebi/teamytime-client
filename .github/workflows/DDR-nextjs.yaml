name: deploy-dockerize-run

on: 
  push:
      branches:
        - master
        - update-CI/CD

jobs:
  
  deploy:
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    env:
      FRONT_DEPLOY_PATH: ${{ secrets.FRONT_PROD_DEPLOY_PATH }}
    name: deploy
    steps:
      - name: remove previous files
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd ${{env.FRONT_DEPLOY_PATH}}
            rm -rf ..?* .[!.]* *
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
          
      - uses: actions/checkout@v2
      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USER }}
          TARGET: ${{ secrets.FRONT_PROD_DEPLOY_PATH }}
  
  dockerize-and-run:
    needs: deploy
    if: contains(github.event.head_commit.message, 'deploy')
    runs-on: ubuntu-latest
    name: 'dockerize and run'
    env:
      FRONT_DEPLOY_PATH: ${{ secrets.FRONT_PROD_DEPLOY_PATH }}
    steps:
      - name: run ducker
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd ${{env.FRONT_DEPLOY_PATH}}
            cd ../
            docker compose up -d --build
          host: ${{ secrets.SSH_HOST }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
      - name: action-slack
        if: failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: 'https://log.m3m.dev/api/time-work-clint-deploy.php?token=ed2456914e48c1e17b7bd922177291ef8b7f553edf1b1f66b6fc1a076524b22f'
          method: 'GET'
