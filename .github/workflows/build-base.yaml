name: build-base

on: 
  push:
    branches:
      - master
      - dev


jobs:
  dev-build-base:
    if: contains(github.event.head_commit.message, 'dev-base-build')
    runs-on: ubuntu-latest
    name: 'dev install dependencies'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.cicd-assets/Dockerfile-base
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: '${{ secrets.REGISTRY_URL }}/teamytime-front/dev/base:latest'
          cache-from: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/teamytime-front/dev/base:buildcache'
          cache-to: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/teamytime-front/dev/base:buildcache,mode=max'

  prod-build-base:
    if: contains(github.event.head_commit.message, 'prod-base-build')
    runs-on: ubuntu-latest
    name: 'prod install dependencies'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to private registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.cicd-assets/Dockerfile-base
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: '${{ secrets.REGISTRY_URL }}/teamytime-front/prod/base:latest'
          cache-from: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/teamytime-front/prod/base:buildcache'
          cache-to: 'type=registry,ref=${{ secrets.REGISTRY_URL }}/teamytime-front/prod/base:buildcache,mode=max'